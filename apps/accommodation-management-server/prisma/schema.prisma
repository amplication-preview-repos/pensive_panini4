datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Room {
  id           String             @id @default(cuid())
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  name         String?
  typeField    EnumRoomTypeField?
  price        Float?
  property     Property?          @relation(fields: [propertyId], references: [id])
  propertyId   String?
  appointments Appointment[]
}

model Property {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  address     String?
  description String?
  name        String?
  provider    String?
  rooms       Room[]
  reviews     Review[]
}

model Review {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  comment    String?
  rating     Int?
  student    String?
  property   Property? @relation(fields: [propertyId], references: [id])
  propertyId String?
}

model Appointment {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  date      DateTime?
  student   String?
  room      Room?     @relation(fields: [roomId], references: [id])
  roomId    String?
}

model Document {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String?
  description String?
  file        Json?
  student     String?
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String?
  lastName  String?
  username  String   @unique
  email     String?  @unique
  password  String
  roles     Json
}

enum EnumRoomTypeField {
  Option1
}
