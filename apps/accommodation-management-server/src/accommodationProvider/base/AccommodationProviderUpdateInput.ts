/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  MaxLength,
  IsEnum,
  IsBoolean,
  IsInt,
  Min,
  Max,
} from "class-validator";
import { EnumAccommodationProviderRoomType } from "./EnumAccommodationProviderRoomType";
import { EnumAccommodationProviderRoles } from "./EnumAccommodationProviderRoles";
import { EnumAccommodationProviderPermissions } from "./EnumAccommodationProviderPermissions";

@InputType()
class AccommodationProviderUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumAccommodationProviderRoomType,
  })
  @IsEnum(EnumAccommodationProviderRoomType)
  @IsOptional()
  @Field(() => EnumAccommodationProviderRoomType, {
    nullable: true,
  })
  roomType?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  electricityIncluded?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  waterIncluded?: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  popularity?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumAccommodationProviderRoles,
    isArray: true,
  })
  @IsEnum(EnumAccommodationProviderRoles, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumAccommodationProviderRoles], {
    nullable: true,
  })
  roles?: Array<"Option1">;

  @ApiProperty({
    required: false,
    enum: EnumAccommodationProviderPermissions,
    isArray: true,
  })
  @IsEnum(EnumAccommodationProviderPermissions, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumAccommodationProviderPermissions], {
    nullable: true,
  })
  permissions?: Array<"Option1">;
}

export { AccommodationProviderUpdateInput as AccommodationProviderUpdateInput };
