/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  MaxLength,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { UniversityWhereUniqueInput } from "../../university/base/UniversityWhereUniqueInput";
import { Type } from "class-transformer";
import { RecommendationCreateNestedManyWithoutStudentsInput } from "./RecommendationCreateNestedManyWithoutStudentsInput";
import { EnumStudentRoles } from "./EnumStudentRoles";
import { EnumStudentPermissions } from "./EnumStudentPermissions";

@InputType()
class StudentCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string | null;

  @ApiProperty({
    required: false,
    type: () => UniversityWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UniversityWhereUniqueInput)
  @IsOptional()
  @Field(() => UniversityWhereUniqueInput, {
    nullable: true,
  })
  university?: UniversityWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: () => RecommendationCreateNestedManyWithoutStudentsInput,
  })
  @ValidateNested()
  @Type(() => RecommendationCreateNestedManyWithoutStudentsInput)
  @IsOptional()
  @Field(() => RecommendationCreateNestedManyWithoutStudentsInput, {
    nullable: true,
  })
  recommendations?: RecommendationCreateNestedManyWithoutStudentsInput;

  @ApiProperty({
    required: false,
    enum: EnumStudentRoles,
    isArray: true,
  })
  @IsEnum(EnumStudentRoles, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumStudentRoles], {
    nullable: true,
  })
  roles?: Array<"Option1">;

  @ApiProperty({
    required: false,
    enum: EnumStudentPermissions,
    isArray: true,
  })
  @IsEnum(EnumStudentPermissions, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumStudentPermissions], {
    nullable: true,
  })
  permissions?: Array<"Option1">;
}

export { StudentCreateInput as StudentCreateInput };
